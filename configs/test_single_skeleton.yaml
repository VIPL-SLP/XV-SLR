feeder: feeder.dataloader_joint.JointFeeder
phase: test
num_epoch: 40
work_dir: ./work_dir/test_single_skeleton
batch_size: 32 # 128 -> 32
random_seed: 1234
test_batch_size: 32 # 128->4
num_worker: 10
device: 0
log_interval: 100
eval_interval: 1
save_interval: 1
load_weights: './weights/sk_phase2.pt'
optimizer_args:
  optimizer: Adam
  learning_rate:
    default: 0.001
  optim_args:
    betas: [0.9, 0.998]
    weight_decay: 0.00001
  scheduler_type: MultiStepLR
  scheduler_args:
    milestones: [20, 35]
  start_epoch: 0

feeder_args:
  train:
    input_list_file: ./data/train_self.json
    num_frames: 64
    data_type: ['2d_skeleton']
  val:
    input_list_file: ./data/val_self.json
    num_frames: 64
    data_type: ['2d_skeleton']
  test:
  # test input file is specified in the main.py load_test_data
    num_frames: 64
    data_type: ['2d_skeleton']
  kps_config: &kps_path ./configs/kps/best_kps_config.yaml

# model: modules.SLT_model.SLT_Model
model: modules.islr_model.ISLRModel
model_args:
  visual_backbone_args:
    2d_skeleton:
      type: STGCN
      module_type: CoSign1s
      kps_config: *kps_path
      CR_args:
        clip_length: 25
        ratio: 0.2
      level: '0'
      adaptive: True
      in_channels: 3
      hidden_size: 1024
      temporal_kernel: 5
      cat_hand: True
    
    # rgb:
    #   type: I3D
  
  head_args:
    classify:
      type: ClassifyHead
      in_dim: 1024
      # specify the feat used for classification
      feat_type: 2d_skeleton
      norm_classifier: True
      norm_scale: 32
      class_num: 1000 # this will be overwrited by len(gloss_dict)
    
  temporal_arg:
    type: LSTM

  loss_weight:
    classify: 1.0
  
  # use which head for prediction
  pred_head: classify

aug_poss:
  osxposs: 0.3